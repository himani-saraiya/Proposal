{
  "Add Form Wrapper Dialog": {
    "prefix": "afwd",
    "body": [
      "import React from 'react';",
      "import Dialog from '@mui/material/Dialog';",
      "import { Form, Formik, FormikHelpers } from 'formik';",
      "import { object, string } from 'yup';",
      "import { ${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/}Values } from 'src/models/${TM_FILENAME_BASE/(Add)(.*)(FormWrapper)$/$2/}.model';",
      "import ${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/} from '../Layouts/${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/}';",
      "",
      "type Props = {",
      "  onClose: () => void;",
      "};",
      "",
      "const ${TM_FILENAME_BASE} = ({ onClose }: Props) => {",
      "  // Form Initial Values",
      "  const initialValues: ${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/}Values = {",
      "    name: '',",
      "    age: '',",
      "  };",
      "",
      "  // Validation Schema",
      "  const validationSchema = object().shape({",
      "    name: string().required('Please enter name'),",
      "    age: string().required('Please enter age'),",
      "  });",
      "",
      "  // Handle Submit",
      "  const handleSubmit = (",
      "    values: ${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/}Values,",
      "    { setSubmitting, resetForm }: FormikHelpers<${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/}Values>",
      "  ) => {",
      "    setTimeout(() => {",
      "      console.log(values, 'Values');",
      "      setSubmitting(false);",
      "      resetForm();",
      "    }, 1000);",
      "  };",
      "",
      "  return (",
      "    <Dialog open maxWidth='xs' fullWidth>",
      "      <Formik",
      "        initialValues={initialValues}",
      "        validationSchema={validationSchema}",
      "        onSubmit={handleSubmit}",
      "      >",
      "        {(formikProps) => (",
      "          <Form>",
      "            <${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/} formikProps={formikProps} onClose={onClose} />",
      "          </Form>",
      "        )}",
      "      </Formik>",
      "    </Dialog>",
      "  );",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "React functional component with Formik and Material-UI Dialog"
  },

  "Edit Form Wrapper Dialog": {
    "prefix": "efwd",
    "body": [
      "import React from 'react';",
      "import Dialog from '@mui/material/Dialog';",
      "import { Form, Formik, FormikHelpers } from 'formik';",
      "import { object, string } from 'yup';",
      "import { ${TM_FILENAME_BASE/(Edit)(.*)(Wrapper)$/$2/}Values } from 'src/models/${TM_FILENAME_BASE/(Edit)(.*)(FormWrapper)$/$2/}.model';",
      "import ${TM_FILENAME_BASE/(Edit)(.*)(Wrapper)$/$2/} from '../Layouts/${TM_FILENAME_BASE/(Edit)(.*)(Wrapper)$/$2/}';",
      "",
      "type Props = {",
      "  onClose: () => void;",
      "};",
      "",
      "const ${TM_FILENAME_BASE} = ({ onClose }: Props) => {",
      "  // Form Initial Values",
      "  const initialValues: ${TM_FILENAME_BASE/(Edit)(.*)(Wrapper)$/$2/}Values = {",
      "    name: '',",
      "    age: '',",
      "  };",
      "",
      "  // Validation Schema",
      "  const validationSchema = object().shape({",
      "    name: string().required('Please enter name'),",
      "    age: string().required('Please enter age'),",
      "  });",
      "",
      "  // Handle Submit",
      "  const handleSubmit = (",
      "    values: ${TM_FILENAME_BASE/(Edit)(.*)(Wrapper)$/$2/}Values,",
      "    { setSubmitting, resetForm }: FormikHelpers<${TM_FILENAME_BASE/(Edit)(.*)(Wrapper)$/$2/}Values>",
      "  ) => {",
      "    setTimeout(() => {",
      "      console.log(values, 'Values');",
      "      setSubmitting(false);",
      "      resetForm();",
      "    }, 1000);",
      "  };",
      "",
      "  return (",
      "    <Dialog open maxWidth='xs' fullWidth>",
      "      <Formik",
      "        initialValues={initialValues}",
      "        validationSchema={validationSchema}",
      "        onSubmit={handleSubmit}",
      "      >",
      "        {(formikProps) => (",
      "          <Form>",
      "            <${TM_FILENAME_BASE/(Edit)(.*)(Wrapper)$/$2/} formikProps={formikProps} onClose={onClose} />",
      "          </Form>",
      "        )}",
      "      </Formik>",
      "    </Dialog>",
      "  );",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "React functional component with Formik and Material-UI Dialog"
  },

  "Form Dialog": {
    "prefix": "fd",
    "body": [
      "import React from 'react';",
      "import { FormikProps } from 'formik';",
      "import ATMLoadingButton from 'src/components/UI/atoms/ATMLoadingButton/ATMLoadingButton';",
      "import ATMTextField from 'src/components/UI/atoms/formFields/ATMTextField/ATMTextField';",
      "import { ${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/}Values } from 'src/models/${TM_FILENAME_BASE/(.*)Form$/$1/}.model';",
      ,
      "",
      "type Props = {",
      "  formikProps: FormikProps<${TM_FILENAME_BASE/(Add)(.*)(Wrapper)$/$2/}Values>;",
      "  onClose: () => void;",
      "};",
      "",
      "const ${TM_FILENAME_BASE} = ({ formikProps, onClose }: Props) => {",
      "  const { values, setFieldValue, isSubmitting, handleBlur } = formikProps;",
      "",
      "  return (",
      "    <div className='p-4 flex flex-col gap-6'>",
      "      <div className='flex justify-between items-center'>",
      "        <div className='text-xl font-medium'> ${1: Form Heading} </div>",
      "        <button type='button' className='hover:bg-hover' onClick={onClose}>",
      "          Cancel",
      "        </button>",
      "      </div>",
      "      <div className='flex flex-col gap-4'>",
      "        <div>",
      "          <ATMTextField",
      "            name='name'",
      "            value={values.name}",
      "            onChange={(e) => {",
      "              setFieldValue('name', e.target.value);",
      "            }}",
      "            label='Name'",
      "            onBlur={handleBlur}",
      "          />",
      "        </div>",
      "        <div>",
      "          <ATMTextField",
      "            name='age'",
      "            value={values.age}",
      "            onChange={(e) => {",
      "              setFieldValue('age', e.target.value);",
      "            }}",
      "            label='Age'",
      "            onBlur={handleBlur}",
      "          />",
      "        </div>",
      "      </div>",
      "      <div>",
      "        <ATMLoadingButton isLoading={isSubmitting} type='submit'>",
      "          Save",
      "        </ATMLoadingButton>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "React functional component for form"
  },

  "Handle API Response": {
    "prefix": "har",
    "body": [
      "${1:mutationName}(values).then((res: any) => {",
      "  if (res?.error) {",
      "    showToast('error', res?.error?.data?.message);",
      "  } else {",
      "    if (res?.data?.status) {",
      "      showToast('success', res?.data?.message);",
      "      resetForm();",
      "      onClose();",
      "    } else {",
      "      showToast('error', res?.data?.message);",
      "    }",
      "  }",
      "  setSubmitting(false);",
      "})"
    ],
    "description": "Add Team Member API Call"
  }
}
