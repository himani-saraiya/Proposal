{
  "List Page": {
    "prefix": "list",
    "body": [
      "import React from 'react';",
      "import ATMPageHeader from 'src/components/UI/atoms/ATMPageHeader/ATMPageHeader';",
      "import ATMPagination from 'src/components/UI/atoms/ATMPagination/ATMPagination';",
      "import ATMTable, {",
      "  columnTypes,",
      "} from 'src/components/UI/atoms/ATMTable/ATMTable';",
      "import SideNavLayout from 'src/components/layouts/SideNavLayout/SideNavLayout';",
      "",
      "type Props = {",
      "  columns: columnTypes[];",
      "  rows: any[];",
      "  paginationProps: {",
      "    isTableLoading: boolean;",
      "    totalItems: number;",
      "    page: number;",
      "    rowsPerPage: number;",
      "    searchValue: string;",
      "    setPage: (newPage: number) => void;",
      "    setRowsPerPage: (newLimit: number) => void;",
      "    setSearchValue: (newValue: string) => void;",
      "  };",
      "};",
      "",
      "const ${TM_FILENAME_BASE} = ({",
      "  columns,",
      "  rows,",
      "  paginationProps: {",
      "    isTableLoading,",
      "    totalItems,",
      "    page,",
      "    rowsPerPage,",
      "    searchValue,",
      "    setPage,",
      "    setRowsPerPage,",
      "    setSearchValue,",
      "  },",
      "}: Props) => {",
      "  return (",
      "    <SideNavLayout>",
      "      <div className='flex flex-col h-full'>",
      "        {/* Page Header */}",
      "        <div className='p-4'>",
      "          <ATMPageHeader",
      "            pageTitle='${TM_FILENAME_BASE/(.*)Listing$/$1/}s'",
      "            searchValue={searchValue}",
      "            onSearchChange={setSearchValue}",
      "            buttonProps={{",
      "              btnName: 'Add New',",
      "              onClick: () => {",
      "                alert('Add Clicked');",
      "              },",
      "            }}",
      "          />",
      "        </div>",
      "",
      "        {/* Table */}",
      "        <div className='flex-1 overflow-auto flex flex-col'>",
      "            <ATMTable",
      "              columns={columns}",
      "              rows={rows}",
      "              rowExtraClasses={() => 'min-h-[40px]'}",
      "              isLoading={isTableLoading}",
      "            />",
      "        </div>",
      "",
      "        <div className='p-4 py-2'>",
      "            <ATMPagination",
      "              page={page}",
      "              rowsPerPage={rowsPerPage}",
      "              onPageChange={setPage}",
      "              onRowsPerPageChange={setRowsPerPage}",
      "              rowCount={totalItems}",
      "              rows={rows}",
      "            />",
      "          </div>",
      "      </div>",
      "    </SideNavLayout>",
      "  );",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "Create a React functional component"
  },

  "List Wrapper Page": {
    "prefix": "list-wrapper",
    "body": [
      "import React from 'react';",
      "import ${TM_FILENAME_BASE/(.*)Wrapper$/$1/} from './${TM_FILENAME_BASE/(.*)Wrapper$/$1/}';",
      "import { columnTypes } from 'src/components/UI/atoms/ATMTable/ATMTable';",
      "import { useDispatch, useSelector } from 'react-redux';",
      "import { RootState } from 'src/redux/store';",
      "import { setPage, setRowsPerPage, setSearchValue } from 'src/redux/slices/${TM_FILENAME_BASE/(.*)ListingWrapper$/$1/}Slice';",
      "",
      "type Props = {};",
      "",
      "const ${TM_FILENAME_BASE} = (props: Props) => {",
      "  const dispatch = useDispatch();",
      "  const { items, totalItems, page, rowsPerPage, searchValue, isTableLoading } =",
      "    useSelector((state: RootState) => state.${1:sliceName});",
      "",
      "  const columns: columnTypes[] = [",
      "    { field: 'name', headerName: 'Name', flex: 'flex-[1_1_0%]' },",
      "    { field: 'age', headerName: 'Age', flex: 'flex-[1_1_0%]' },",
      "  ];",
      "",
      "  return (",
      "    <div>",
      "      <${TM_FILENAME_BASE/(.*)Wrapper$/$1/}",
      "        columns={columns}",
      "        rows={items}",
      "        paginationProps={{",
      "          isTableLoading,",
      "          totalItems,",
      "          page,",
      "          rowsPerPage,",
      "          searchValue,",
      "          setPage: (newPage) => dispatch(setPage(newPage)),",
      "          setRowsPerPage: (newRowsPerPage) => dispatch(setRowsPerPage(newRowsPerPage)),",
      "          setSearchValue: (newValue) => dispatch(setSearchValue(newValue)),",
      "        }}",
      "      />",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};"
    ],
    "description": "Create a React component with imports"
  },

  "ATMActionMenu": {
    "prefix": "aam",
    "body": [
      "<ATMActionMenu",
      "  options={[",
      "    {",
      "      label: '${1:Option 1}',",
      "      onClick: () => {${2}},",
      "    },",
      "    {",
      "      label: '${3:Option 2}',",
      "      onClick: () => {${4}},",
      "    },",
      "  ]}",
      "/>"
    ],
    "description": "ATMActionMenu"
  },

  "Column Item With Render Cell": {
    "prefix": "tcrc",
    "body": [
      "{",
      "  field: '${1:fieldName}',",
      "  headerName: '${2:Header Name}',",
      "  flex: 'flex-[${3}_${3}_0%]',",
      "  extraClasses: '${4}',",
      "  renderCell: (row: any) => <div> {row?.${1:fieldName}} </div>,",
      "},",
      ""
    ],
    "description": "Table Column Item With Render Cell"
  },

  "Column Item": {
    "prefix": "tc",
    "body": [
      "{",
      "  field: '${1:fieldName}',",
      "  headerName: '${2:Header Name}',",
      "  flex: 'flex-[${3}_${3}_0%]',",
      "  extraClasses: '${4}',",
      "},",
      ""
    ],
    "description": "Table Column Item"
  }
}
